<h2 style="text-align:center;margin:0em 1em 1em 0em"><%= @event.name %></h2>
<div id="notice" class="row-fluid"><%= flash[:notice] %></div>
<div class="row-fluid">
	<div class="span4">
		<div>
			<span style="font-weight:bold;font-size:1em">Host: </span>
			<span style="font-size:1em"><%= @event.user.full_name %></span>
		</div>
		<div>
			<%= link_to 'Email host', @event.id.to_s+'/email_host', { :id => "emailHostLink", :style=>"color:blue" } %>
		</div>
		<div>
			<span style="font-weight:bold;font-size:1em">Start Date: </span>
			<span style="font-size:1em"><%= @event.display_start_time %></span>
		</div>
		<div>
			<span style="font-weight:bold;font-size:1em">RSVP Date: </span>
			<span style="font-size:1em"><%= @event.display_rsvp_time %></span>
			<div style="font-size:1em;margin-top:1em;"><%= @event.rsvp_countdown %></div>
			<div style="margin-top:1em"><span style="font-size:1em;font-weight:bold;">Number of guest attending: </span><%= @event.attending_guest_count %></div>
		</div>
	</div>
	<div class="span8">
		<%= render :partial=>"guest_event_description", :locals => { :event => @event } %>
	</div>
</div>
<hr />
<div class="row-fluid" style="margin: 2em 0 2em 0">
		<div class="span3 offset1"></div>
		<div class="span3 offset1"><button class="btn btn-primary btn-large" id="modifyRSVPButton" onclick="showRSVPSettings()">Modify RSVP</button></div>
</div>
<div class="row-fluid">
	<div class="span3">
		<ul class="nav nav-pills nav-stacked">
		<li id="taken_items">
			<a href="#" data-target="#takenItems" data-toggle="modal">Taken potluck items</a>
		</li>
		<li id="attending_guests">
			<a href="#" data-target="#attendingGuests" data-toggle="modal">Who's coming?</a>
		</li>
		<li id="unattending_guests">
			<a href="#" data-target="#notAttendingGuests" data-toggle="modal">Who's not coming?</a>
		</li>
		<li id="undecided_guests">
			<a href="#" data-target="#undecidedGuests" data-toggle="modal">Who's not sure?</a>
		</li>
		<li>
			<%= link_to 'Back to my events', events_path, :style=>"color:black" %>
		</li>
		</ul>
	</div>
	<div class="span8">
		<div id="comment-box" style="margin-top:1.5em">
		<%= form_for(@attendee, :url=> [@event,@attendee], :method=>"PUT") do |f| %>
		
		<%= f.label :rsvp, 'Responding with' %>
		<%= f.select :rsvp, [["Going","Going"],["Not Going","Not Going"],["Undecided","Undecided"]],{}, :onchange => "rsvp();" %>

		<div>
			<%= f.label :comment, 'Comments?' %>
			<%= f.text_field :comment %>
		</div>
		<div id="guestcount_div">
			<%= f.label :num_of_guests, "Number of guests you are bringing (excluding yourself):" %>
			<%= f.text_field :num_of_guests %>
			<div id="items_box">
				<label>I am bringing </label>
				<div id="items">
				</div>
			</div>
		</div>
  	<div>
			<button id="cancel" class="btn">Cancel</button>
			<button id="add_items" class='btn btn-success'>Add items</button>
    	<button id="submit" class="btn btn-primary">RSVP</button>
  	</div>
		<% end %>
		</div>
		<div id="previewMode">
			<%= render :partial=>"guest_rsvp_settings", :locals => {:attendee => @attendee } %>
		</div>
	</div>
</div>
	<div id="attendingGuests" class="modal hide">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">x</button>
			<h2>Attending</h2>
		</div>
		<div class="modal-body">
			<%= render :partial => "attending_attendee", :collection => @event.attendees.where("rsvp = 'Going' and id <> ?", @attendee.id) %>
		</div>
		<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
		</div>
	</div>

	<div id="notAttendingGuests" class="modal hide">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">x</button>
			<h2>Not Coming</h2>
		</div>
		<div class="modal-body">
			<%= render :partial => "unattending_attendee", :collection => @event.attendees.where("rsvp = 'Not Going' and id <> ?", @attendee.id) %>
		</div>
		<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
		</div>
	</div>

	<div id="undecidedGuests" class="modal hide">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">x</button>
			<h2>Undecided</h2>
		</div>
		<div class="modal-body">
			<%= render :partial => "undecided_attendee", :collection => @event.attendees.where("rsvp = 'Undecided' and id <> ?", @attendee.id) %>
		</div>
		<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
		</div>
	</div>

	<div id="emailModal" class="modal hide" data-remote="">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">Ã—</button>
		</div>
		<div class="modal-body">
		</div>
		<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
		</div>
	</div>

	<div id="takenItems" class="modal hide">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">x</button>
			<h2>Items others are bringing</h2>
		</div>
		<div class="modal-body">
			<%= render :partial=> "taken_items", :collection => @event.get_items_guests_are_bringing %>
		</div>
	</div>
<script type="text/javascript">
		function showRSVPSettings(){
			$("#previewMode").hide();
			$("#comment-box").show();
			$("#attendee_rsvp option:selected").change();
			return false;
		}

		function rsvp(){
			var answer = $("#attendee_rsvp").val();
			if (answer == "Going"){
				$("#guestcount_div").show();
				$("#add_items").show();
			} else {
				$("#guestcount_div").hide();
				$("#add_items").hide();
			}
		}

		$(document).ready(function(){
			var category_array = [], dishes = {}, flash_message = $("#notice"), taken_queue = [];

			if (flash_message.text().length > 0)
				flash_message.addClass("alert alert-info");
			$("#guestcount_div").hide();
			$("#comment-box").hide();

			function removeActiveClass(){
				$("li").removeClass("active");
			}

			$("li").each(function (index, data){
				$(this).click(function(){
					removeActiveClass();
					$(this).addClass("active");
				});
			});

			$.ajax({
				url: window.location.pathname+"/potluck_items.json",
				dataType: "json",
				type: "GET",
				async: false,
				success: function(data){
					$.each(data, function(index, item){
						category_array.push(item.category);
						dishes[item.category] = item.dishes;
					});
				}
			});

			$("#emailModal").on('hidden',function(){
				$(this).attr('data-remote',"");
				$(this).find(".modal-body").html("");
			});

			function updateAllDishSelects(){
				var item_divs = $(".item");
		//		$.each(item_divs, function(position, item_div){
				for (var i = 0; i < item_divs.length; i++){
					var category = $(".item").eq(i).find("#attendee_category").val(), attendee_dish_select = $(".item").eq(i).find("#attendee_select_dish"), options, available_for_category, selected_value;
					options = $(".item").eq(i).find("#attendee_select_dish option").map(function(){ return $(this).val(); });
					selected_value = $(".item").eq(i).find("#attendee_select_dish option:selected").val();
					if (category != ""){
						available_for_category = dishes[category];
						$.each(available_for_category, function(index, available_item){
							var available_index = $.inArray(available_item, options);
							if (available_index == -1){
								$(".item").eq(i).find("#attendee_select_dish").append("<option value='"+available_item+"'>"+available_item+"</option>");
							}
						});
					}
					//consider removing stuff
					$.each(taken_queue, function(index, remove_item){
						if (selected_value != remove_item.item){
							var remove_index = $.inArray(remove_item.item, options);
							if (remove_index >= 0){
								$(".item").eq(i).find("#attendee_select_dish option:eq("+remove_index+")").remove();
							}
						}
					});
				}
			//	});
			}

			// this should return the div class='item' so that the add and/or remove button could be appended to it
			function createItemForRSVP(){
				var item_div = $("<div class='item'></div>"), 
						dish_div = $("<div id='dish_div'></div>"),
						category_select = $("<select id='attendee_category' style='margin: 0 0.5em 0 0'><option value=''>Undecided</option></select>"), 
						dishes_select = $("<select id='attendee_select_dish' style='margin: 0 0.5em 0 0'><option value=''>Undecided</option></select>"), 
						attendee_dish = $("<input type='text' id='attendee_dish' style='margin: 0 0.5em 0 0' />"),
						checkbox_div = $("<div id='checkbox_div'></div>"), 
						label_checkbox=$("<label>Do not like what you see? Click to choose your own: </label>"),
						checkbox = $("<input type='checkbox' id='is_custom' />");
				
					item_div.append(dish_div);
					dish_div.append(category_select);
					dish_div.append(dishes_select);
					dish_div.append(attendee_dish);
					checkbox_div.append(label_checkbox);
					label_checkbox.append(checkbox);
					item_div.append(checkbox_div);

				//populate the category select tag
				$.each(category_array, function(index, item){
					category_select.append("<option value='"+item+"'>"+item+"</option>");
				});

				//put the change on category select tag on the select_dish
				category_select.change(function(){
					var data = $(this).val();
					var dish_array;
					if (data != "")
						dish_array = dishes[data];
					else
						dish_array = [];
					dishes_select.empty();
					dishes_select.append("<option value=''>Undecided</option>");
					$.each(dish_array, function(index, item){
						dishes_select.append("<option value='"+item+"'>"+item+"</option>");
					});
					dishes_select.change();
				});

				//change the value in the hidden field
				dishes_select.change(function(){
					var data = $(this).val(), available_index = -1, remove_index = -1, category, dish, item_to_be_removed, remove_index=-1, foundIt=false;
					category = category_select.val();
					if (data != "")
					{
						available_index = $.inArray(data, dishes[category]);
						dishes[category].splice(available_index,1);
						taken_queue.push({"category":category, "item":data});
					}
					/* at this point, the taken queue has one more item than what is currently displayed. find the difference and remove it */
					$.each(taken_queue, function(taken_index, taken_item){
						foundIt = false;
						for (var i = 0; i < $(".item").length; i++){
							var displayed_div = $(".item").eq(i);
							if (!($(displayed_div).find("#is_custom").attr('checked'))){
								var div_category = $(displayed_div).find("#attendee_category").val(), div_dish = $(displayed_div).find("#attendee_select_dish").val();
								if (taken_item.item == div_dish && taken_item.category == div_category){
									foundIt = true;
								}
							}
						}
						if (!foundIt){
							item_to_be_removed = taken_item;
							remove_index = taken_index;
							return false; // break out of loop
						}
					});
					if (remove_index != -1){
						taken_queue.splice(remove_index,1);
						dishes[item_to_be_removed.category].push(item_to_be_removed.item);
					}
					//add selectbox updates method here
					updateAllDishSelects();
					attendee_dish.val(data);
				});

				//hide the text_dish
				attendee_dish.hide();

				//add the event handler for checkbox
				checkbox.change(function(){
					if ($(this).is(":checked")){
						$(this).attr('checked','checked');
						dishes_select.val("").change();
						attendee_dish.show();
						dishes_select.hide();
					} else {
						$(this).removeAttr('checked');
						dishes_select.show();
						attendee_dish.hide();
						attendee_dish.val(dishes_select.val());
						category_select.change();
					}
				});
				return item_div;
			}

			$("#cancel").click(function(){
					$("#guestcount_div").hide();
					$("#comment-box").hide();
					$("#previewMode").show();
					return false;
			});

			//item is a hash object representing the rsvp item that a user previously has
			function createRSVPItemWithRemoveButton(item){
				var item_div, delete_button = $("<button class='btn btn-danger'>remove</button>");
				item_div = createItemForRSVP();
				delete_button.click(function(){
					var category = item_div.find("#attendee_category").val(), selected_dish = item_div.find("#attendee_select_dish").val(), index = -1, removed_item;
					if (category != "" && selected_dish != ""){
						dishes[category] << selected_dish; //add dish back to dish hash
					// now remove the item from the taken_queue
						$.each(taken_queue, function(position, item){
							if (item.item == selected_dish && item.category == category){
								index = position;
								removed_item = item;
							}
						});
						if (index != -1){
							taken_queue.splice(index,1);
							dishes[removed_item.category].push(removed_item.item);
						}
						updateAllDishSelects();
					}
					item_div.remove();
					// update all selects
					return false;
				});

				item_div.find("#dish_div").append(delete_button);
				$("#items").append(item_div);
				if (item){
					item_div.find("#attendee_category").val(item.category).change();
					
					if (item.is_custom){
						item_div.find("#is_custom").attr('checked','checked').change();
						item_div.find("#attendee_dish").val(item.item);
					} else {
						dishes[item.category].push(item.item);
						item_div.find("#attendee_select_dish").append("<option value='"+item.item+"'>"+item.item+"</option>");
						item_div.find("#attendee_select_dish").val(item.item).change();
					}
				}
			}

			function createFirstRSVPItem(){
				var item_div;
				item_div = createItemForRSVP();
				$("#items").append(item_div);
				return false;
			}

			$("#add_items").click(function(){
				createRSVPItemWithRemoveButton();
				return false;
			});

			createFirstRSVPItem();

			$.ajax({
				url: $("form").attr('action'),
				dataType: "json",
				async: false,
				type: "GET",
				success: function(data){
					var attendee_dishes = data.dish;
					$.each(attendee_dishes, function(index, item){
						if (index == 0){
							$("#attendee_category").val(item.category).change();
							if (item.is_custom){
								$("#is_custom").attr('checked','checked').change();
								$("#attendee_select_dish").val("").change();
								$("#attendee_dish").val(item.item);
							} else {
								dishes[item.category].push(item.item);
								$("<option value='"+item.item+"'>"+item.item+"</option>").appendTo("#attendee_select_dish");
								$("#attendee_select_dish").val(item.item).change();
							}
						} else {
							createRSVPItemWithRemoveButton(item);
						}
					});
				}
			}); 

		$("#submit").click(function(){
				var attendee_rsvp = $("#attendee_rsvp").val();
				var attendee_guestcount = $("#attendee_num_of_guests").val();
				var rsvp_item_array = [];
				var items_collection = $(".item");
				if (attendee_rsvp != "Going"){
					$("#attendee_num_of_guests").val(0);
					$("#attendee_category").val("");
					$("#attendee_dish").val("");
					$("#attendee_bringing_custom").removeAttr('checked');
				} else {
					$.each(items_collection, function(index, item){
						var hash_object, category = $(item).find("#attendee_category").val(), dish_item = $(item).find("#attendee_dish").val(), is_custom = $(item).find("#is_custom").is(":checked");
						if ($.trim(category) != "" && $.trim(dish_item) != ""){
							hash_object = {"category": category, "item": dish_item, "is_custom":is_custom};
							rsvp_item_array.push(hash_object);
						}
					});
				}
				$("form").append("<input type='hidden' name='attendee[dish]' value='"+JSON.stringify(rsvp_item_array)+"' />");
			});

		function loadEmailTemplate(emailObject){
			var url = $(emailObject).attr('href'), emailModal = $("#emailModal");
			emailModal.attr('data-remote',url);
			$.ajax({
				url: url,
				dataType: "html",
				success: function(data){
					emailModal.find(".modal-body").html(data);
					emailModal.modal("show");
				},
				error: function(xhr, errorText, errorObject){
					emailModal.find(".modal-body").html("<div class='alert alert-error'>"+errorText+": Cannot retrieve template for emailing host. Please contact the administrator about this</div>");
				}
			});
		}

		$("#emailHostLink").click(function(){
			loadEmailTemplate($(this));
			return false;
		});

		$(".email_individual").click(function(){
			var activeModal = $(".active").find("a").attr('data-target');
			$(activeModal).modal("hide");
			//close the modal by finding which class is active

			loadEmailTemplate($(this));
			return false;
		});

		});

</script>
